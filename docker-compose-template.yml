version: '3.8'

networks:
  network_public:
    external: true

volumes:
  postgres_data:
    driver: local

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network_public
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  backend:
    image: ${DOCKER_USERNAME}/jicturbo-backend:latest
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      FRONTEND_URL: ${FRONTEND_URL}
      PORT: 3000
      NODE_ENV: production
    networks:
      - network_public
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jicturbo-api.rule=Host(`${BACKEND_DOMAIN}`)"
        - "traefik.http.routers.jicturbo-api.entrypoints=websecure"
        - "traefik.http.routers.jicturbo-api.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.jicturbo-api.loadbalancer.server.port=3000"
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres

  frontend:
    image: ${DOCKER_USERNAME}/jicturbo-frontend:latest
    networks:
      - network_public
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jicturbo.rule=Host(`${FRONTEND_DOMAIN}`)"
        - "traefik.http.routers.jicturbo.entrypoints=websecure"
        - "traefik.http.routers.jicturbo.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.jicturbo.loadbalancer.server.port=80"
      restart_policy:
        condition: on-failure
